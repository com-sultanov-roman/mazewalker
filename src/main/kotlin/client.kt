import automaton.AutomatonRepositoryimport compile.Compilerimport Constants.STATE_DEFAULT_NAMEimport editor.Editorimport kotlinx.browser.documentimport kotlinx.browser.windowimport maze.core.ChessMazeimport maze.generators.ChessMazeEditorimport maze.generators.ChessMazeGeneratorimport scene.Sceneimport scene.SceneControllerval canvas = document.getElementById("test")val code = document.getElementById("code")val lines = document.getElementById("lines")val automatonRepository: AutomatonRepository = AutomatonRepository.getInstance()val sceneController = SceneController(canvas)val codeEditor = Editor(    code ?: throw NullPointerException("no such element"),    lines ?: throw NullPointerException("no such element"))fun main() {    //val maze: ChessMaze = ChessMazeGenerator.makeEmpty()    //ChessMazeEditor(maze).generateBorderFromFunction("3*ln(abs(x) + 1)", fill = "d")    //ChessMazeEditor(maze).generateLinearBorder(a = 0.7, b = 0, fill = "u")    //val txtMaze = ChessMaze(maze.toTXT())    //println(maze.toTXT())    //println(txtMaze)    val maze = ChessMazeGenerator.generateRectangle(100, 100, -50 to -50)    val scene = Scene(maze)    sceneController.setScene(scene)    sceneController.draw()    // sceneController.run()}